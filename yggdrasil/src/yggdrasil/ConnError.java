// Code generated by gobind. DO NOT EDIT.

// Java class yggdrasil.ConnError is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/yggdrasil-network/yggdrasil-go/src/yggdrasil
package yggdrasil;

import go.Seq;

/**
 * ConnError implements the net.Error interface
 */
public final class ConnError implements Seq.Proxy {
	static { Yggdrasil.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	ConnError(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public ConnError() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	/**
	 * Closed returns if the session is already closed and is now unusable.
	 */
	public native boolean closed();
	public native String error();
	/**
	 * PacketMaximumSize returns the maximum supported packet size. This will only
	return a non-zero value if ConnError.PacketTooBig() returns true.
	 */
	public native long packetMaximumSize();
	/**
	 * PacketTooBig returns in response to sending a packet that is too large, and
	if so, the maximum supported packet size that should be used for the
	connection.
	 */
	public native boolean packetTooBig();
	/**
	 * Temporary return true if the error is temporary or false if it is a permanent
	error condition.
	 */
	public native boolean temporary();
	/**
	 * Timeout returns true if the error relates to a timeout condition on the
	connection.
	 */
	public native boolean timeout();
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof ConnError)) {
		    return false;
		}
		ConnError that = (ConnError)o;
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("ConnError").append("{");
		return b.append("}").toString();
	}
}

