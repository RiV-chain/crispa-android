apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def acraSecretsPropertiesFile = rootProject.file("acra.properties")
def acraSecretsProperties = new Properties()
acraSecretsProperties.load(new FileInputStream(acraSecretsPropertiesFile))

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "io.github.chronosx88.mesh"
        minSdkVersion 16
        //noinspection ExpiredTargetSdkVersion required for peers multicast < API 30
        targetSdkVersion 29

        versionCode 70
        versionName "0.4.1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", project.getParent().name+"-"+versionName)

        buildConfigField("String", "ACRA_BACKEND_URL", acraSecretsProperties['ACRA_BACKEND_URL'])
        buildConfigField("String", "ACRA_LOGIN", acraSecretsProperties['ACRA_LOGIN'])
        buildConfigField("String", "ACRA_PASSWORD", acraSecretsProperties['ACRA_PASSWORD'])
        multiDexEnabled true
    }
	signingConfigs {
	  release {
		storeFile file(keystoreProperties['KEYSTORE_FILE_PATH'])
		storePassword keystoreProperties['KEYSTORE_PASSWORD']
		keyAlias keystoreProperties['KEY_ALIAS']
		keyPassword keystoreProperties['KEY_PASSWORD']
	  }
	}
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
        }
    }
    ndkVersion "21.2.6472646"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/NOTICE']
        }
    }
    buildFeatures {
        viewBinding true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    namespace 'org.mesh.app.crispa'

}

preBuild.doFirst {
    println("Executing make")
    def proc = "make -C mesh".execute()
    proc.waitForProcessOutput(System.out, System.err)
}

dependencies {

    implementation 'ch.acra:acra-http:5.9.6'
    implementation 'ch.acra:acra-dialog:5.9.6'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':mesh')

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'com.google.android.material:material:1.9.0-alpha02'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.hbb20:ccp:2.4.0'
    implementation 'com.vincentbrison.openlibraries.android:dualcache:3.1.1'
    implementation 'com.vincentbrison.openlibraries.android:dualcache-jsonserializer:3.1.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'androidx.work:work-runtime-ktx:2.8.0'

    implementation "androidx.lifecycle:lifecycle-viewmodel:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
