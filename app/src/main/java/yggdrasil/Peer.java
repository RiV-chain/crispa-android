// Code generated by gobind. DO NOT EDIT.

// Java class yggdrasil.Peer is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/yggdrasil-network/yggdrasil-go/src/yggdrasil
package yggdrasil;

import go.Seq;

/**
 * Peer represents a single peer object. This contains information from the
preferred switch port for this peer, although there may be more than one
active switch port connection to the peer in reality.

This struct is informational only - you cannot manipulate peer connections
using instances of this struct. You should use the AddPeer or RemovePeer
functions instead.
 */
public final class Peer implements Seq.Proxy {
	static { Yggdrasil.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	Peer(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public Peer() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	// skipped field Peer.PublicKey with unsupported type: github.com/yggdrasil-network/yggdrasil-go/src/crypto.BoxPubKey
	
	public final native String getEndpoint();
	public final native void setEndpoint(String v);
	
	// skipped field Peer.BytesSent with unsupported type: uint64
	
	// skipped field Peer.BytesRecvd with unsupported type: uint64
	
	public final native String getProtocol();
	public final native void setProtocol(String v);
	
	// skipped field Peer.Port with unsupported type: uint64
	
	// skipped field Peer.Uptime with unsupported type: time.Duration
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof Peer)) {
		    return false;
		}
		Peer that = (Peer)o;
		// skipped field Peer.PublicKey with unsupported type: github.com/yggdrasil-network/yggdrasil-go/src/crypto.BoxPubKey
		
		String thisEndpoint = getEndpoint();
		String thatEndpoint = that.getEndpoint();
		if (thisEndpoint == null) {
			if (thatEndpoint != null) {
			    return false;
			}
		} else if (!thisEndpoint.equals(thatEndpoint)) {
		    return false;
		}
		// skipped field Peer.BytesSent with unsupported type: uint64
		
		// skipped field Peer.BytesRecvd with unsupported type: uint64
		
		String thisProtocol = getProtocol();
		String thatProtocol = that.getProtocol();
		if (thisProtocol == null) {
			if (thatProtocol != null) {
			    return false;
			}
		} else if (!thisProtocol.equals(thatProtocol)) {
		    return false;
		}
		// skipped field Peer.Port with unsupported type: uint64
		
		// skipped field Peer.Uptime with unsupported type: time.Duration
		
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getEndpoint(), getProtocol()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("Peer").append("{");
		b.append("Endpoint:").append(getEndpoint()).append(",");
		b.append("Protocol:").append(getProtocol()).append(",");
		return b.append("}").toString();
	}
}

